C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE oled.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接P12
  19          //              DC   接P13
  20          //              CS   接P14               
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/。
  30          #include "oled.h"
  31          //#include "stdlib.h"
  32          #include "oledfont.h"    
  33          //#include "delay.h"
  34          //OLED的显存
  35          //存放格式如下.
  36          //[0]0 1 2 3 ... 127    
  37          //[1]0 1 2 3 ... 127    
  38          //[2]0 1 2 3 ... 127    
  39          //[3]0 1 2 3 ... 127    
  40          //[4]0 1 2 3 ... 127    
  41          //[5]0 1 2 3 ... 127    
  42          //[6]0 1 2 3 ... 127    
  43          //[7]0 1 2 3 ... 127                       
  44          
  45          
  46          void delay_ms(unsigned int ms)
  47          {                         
  48   1              unsigned int a;
  49   1              while(ms)
  50   1              {
  51   2                      a=1800;
  52   2                      while(a--);
  53   2                      ms--;
  54   2              }
  55   1              return;
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 2   

  56   1      }
  57          /**********************************************
  58          //IIC Start
  59          **********************************************/
  60          void IIC_Start()
  61          {
  62   1      
  63   1              OLED_SCLK_Set() ;
  64   1              OLED_SDIN_Set();
  65   1              OLED_SDIN_Clr();
  66   1              OLED_SCLK_Clr();
  67   1      }
  68          
  69          /**********************************************
  70          //IIC Stop
  71          **********************************************/
  72          void IIC_Stop()
  73          {
  74   1      OLED_SCLK_Set() ;
  75   1      //      OLED_SCLK_Clr();
  76   1              OLED_SDIN_Clr();
  77   1              OLED_SDIN_Set();
  78   1              
  79   1      }
  80          
  81          void IIC_Wait_Ack()
  82          {
  83   1      
  84   1              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为上拉输入模式
  85   1              //GPIOB->CRH |= 0x00080000;
  86   1      //      OLED_SDA = 1;
  87   1      //      delay_us(1);
  88   1              //OLED_SCL = 1;
  89   1              //delay_us(50000);
  90   1      /*      while(1)
  91   1              {
  92   1                      if(!OLED_SDA)                           //判断是否接收到OLED 应答信号
  93   1                      {
  94   1                              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为通用推免输出模式
  95   1                              //GPIOB->CRH |= 0x00030000;
  96   1                              return;
  97   1                      }
  98   1              }
  99   1      */
 100   1              OLED_SCLK_Set() ;
 101   1              OLED_SCLK_Clr();
 102   1      }
 103          /**********************************************
 104          // IIC Write byte
 105          **********************************************/
 106          
 107          void Write_IIC_Byte(unsigned char IIC_Byte)
 108          {
 109   1              unsigned char i;
 110   1              unsigned char m,da;
 111   1              da=IIC_Byte;
 112   1              OLED_SCLK_Clr();
 113   1              for(i=0;i<8;i++)                
 114   1              {
 115   2                              m=da;
 116   2                      //      OLED_SCLK_Clr();
 117   2                      m=m&0x80;
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 3   

 118   2                      if(m==0x80)
 119   2                      {OLED_SDIN_Set();}
 120   2                      else OLED_SDIN_Clr();
 121   2                              da=da<<1;
 122   2                      OLED_SCLK_Set();
 123   2                      OLED_SCLK_Clr();
 124   2                      }
 125   1      
 126   1      
 127   1      }
 128          /**********************************************
 129          // IIC Write Command
 130          **********************************************/
 131          void Write_IIC_Command(unsigned char IIC_Command)
 132          {
 133   1         IIC_Start();
 134   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 135   1              IIC_Wait_Ack(); 
 136   1         Write_IIC_Byte(0x00);                        //write command
 137   1              IIC_Wait_Ack(); 
 138   1         Write_IIC_Byte(IIC_Command); 
 139   1              IIC_Wait_Ack(); 
 140   1         IIC_Stop();
 141   1      }
 142          /**********************************************
 143          // IIC Write Data
 144          **********************************************/
 145          void Write_IIC_Data(unsigned char IIC_Data)
 146          {
 147   1         IIC_Start();
 148   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
 149   1              IIC_Wait_Ack(); 
 150   1         Write_IIC_Byte(0x40);                        //write data
 151   1              IIC_Wait_Ack(); 
 152   1         Write_IIC_Byte(IIC_Data);
 153   1              IIC_Wait_Ack(); 
 154   1         IIC_Stop();
 155   1      }
 156          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 157          {
 158   1              if(cmd)
 159   1                              {
 160   2      
 161   2         Write_IIC_Data(dat);
 162   2         
 163   2                      }
 164   1              else {
 165   2         Write_IIC_Command(dat);
 166   2                      
 167   2              }
 168   1      
 169   1      
 170   1      }
 171          
 172          /********************************************
 173          // fill_Picture
 174          ********************************************/
 175          void fill_picture(unsigned char fill_Data)
 176          {
 177   1              unsigned char m,n;
 178   1              for(m=0;m<8;m++)
 179   1              {
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 4   

 180   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 181   2                      OLED_WR_Byte(0x00,0);           //low column start address
 182   2                      OLED_WR_Byte(0x10,0);           //high column start address
 183   2                      for(n=0;n<128;n++)
 184   2                              {
 185   3                                      OLED_WR_Byte(fill_Data,1);
 186   3                              }
 187   2              }
 188   1      }
 189          
 190          
 191          /***********************Delay****************************************/
 192          void Delay_50ms(unsigned int Del_50ms)
 193          {
 194   1              unsigned int m;
 195   1              for(;Del_50ms>0;Del_50ms--)
 196   1                      for(m=6245;m>0;m--);
 197   1      }
 198          
 199          void Delay_1ms(unsigned int Del_1ms)
 200          {
 201   1              unsigned char j;
 202   1              while(Del_1ms--)
 203   1              {       
 204   2                      for(j=0;j<123;j++);
 205   2              }
 206   1      }
 207          
 208          //坐标设置
 209          
 210                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
 211          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 212   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 213   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 214   1      }         
 215          //开启OLED显示    
 216          void OLED_Display_On(void)
 217          {
 218   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 219   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 220   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 221   1      }
 222          //关闭OLED显示     
 223          void OLED_Display_Off(void)
 224          {
 225   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 226   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 227   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 228   1      }                                        
 229          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 230          void OLED_Clear(void)  
 231          {  
 232   1              u8 i,n;             
 233   1              for(i=0;i<8;i++)  
 234   1              {  
 235   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 236   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 237   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 238   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 239   2              } //更新显示
 240   1      }
 241          void OLED_On(void)  
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 5   

 242          {  
 243   1              u8 i,n;             
 244   1              for(i=0;i<8;i++)  
 245   1              {  
 246   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 247   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 248   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 249   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 250   2              } //更新显示
 251   1      }
 252          //在指定位置显示一个字符,包括部分字符
 253          //x:0~127
 254          //y:0~63
 255          //mode:0,反白显示;1,正常显示                             
 256          //size:选择字体 16/12 
 257          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 258          {       
 259   1              unsigned char c=0,i=0;  
 260   1                      c=chr-' ';//得到偏移后的值                      
 261   1                      if(x>Max_Column-1){x=0;y=y+2;}
 262   1                      if(Char_Size ==16)
 263   1                              {
 264   2                              OLED_Set_Pos(x,y);      
 265   2                              for(i=0;i<8;i++)
 266   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 267   2                              OLED_Set_Pos(x,y+1);
 268   2                              for(i=0;i<8;i++)
 269   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 270   2                              }
 271   1                      else {
 272   2                              OLED_Set_Pos(x,y);
 273   2                              for(i=0;i<6;i++)
 274   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 275   2                                      
 276   2                      }
 277   1      }
 278          //m^n函数
 279          u32 oled_pow(u8 m,u8 n)
 280          {
 281   1              u32 result=1;    
 282   1              while(n--)result*=m;    
 283   1              return result;
 284   1      }                                 
 285          //显示2个数字
 286          //x,y :起点坐标  
 287          //len :数字的位数
 288          //size:字体大小
 289          //mode:模式     0,填充模式;1,叠加模式
 290          //num:数值(0~4294967295);                         
 291          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 292          {               
 293   1              u8 t,temp;
 294   1              u8 enshow=0;                                               
 295   1              for(t=0;t<len;t++)
 296   1              {
 297   2                      temp=(num/oled_pow(10,len-t-1))%10;
 298   2                      if(enshow==0&&t<(len-1))
 299   2                      {
 300   3                              if(temp==0)
 301   3                              {
 302   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 303   4                                      continue;
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 6   

 304   4                              }else enshow=1; 
 305   3                               
 306   3                      }
 307   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 308   2              }
 309   1      } 
 310          //显示一个字符号串
 311          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 312          {
 313   1              unsigned char j=0;
 314   1              while (chr[j]!='\0')
 315   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 316   2                              x+=8;
 317   2                      if(x>120){x=0;y+=2;}
 318   2                              j++;
 319   2              }
 320   1      }
 321          //显示汉字
 322          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 323          {                           
 324   1              u8 t,adder=0;
 325   1              OLED_Set_Pos(x,y);      
 326   1          for(t=0;t<16;t++)
 327   1                      {
 328   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 329   2                                      adder+=1;
 330   2           }  
 331   1                      OLED_Set_Pos(x,y+1);    
 332   1          for(t=0;t<16;t++)
 333   1                              {       
 334   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 335   2                                      adder+=1;
 336   2            }                                 
 337   1      }
 338          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 339          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 340          {       
 341   1       unsigned int j=0;
 342   1       unsigned char x,y;
 343   1        
 344   1        if(y1%8==0) y=y1/8;      
 345   1        else y=y1/8+1;
 346   1              for(y=y0;y<y1;y++)
 347   1              {
 348   2                      OLED_Set_Pos(x0,y);
 349   2          for(x=x0;x<x1;x++)
 350   2                  {      
 351   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 352   3                  }
 353   2              }
 354   1      } 
 355          
 356          //初始化SSD1306                                     
 357          void OLED_Init(void)
 358          {       
 359   1       
 360   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 361   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 362   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 363   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 7   

 364   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 365   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 366   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 367   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 368   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 369   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 370   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 371   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 372   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 373   1              OLED_WR_Byte(0x00,OLED_CMD);//
 374   1              
 375   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 376   1              OLED_WR_Byte(0x80,OLED_CMD);//
 377   1              
 378   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 379   1              OLED_WR_Byte(0x05,OLED_CMD);//
 380   1              
 381   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 382   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 383   1              
 384   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 385   1              OLED_WR_Byte(0x12,OLED_CMD);//
 386   1              
 387   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 388   1              OLED_WR_Byte(0x30,OLED_CMD);//
 389   1              
 390   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 391   1              OLED_WR_Byte(0x14,OLED_CMD);//
 392   1              
 393   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 394   1      }  
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
 423          
 424          
 425          
C51 COMPILER V9.50a   OLED                                                                 12/16/2016 00:46:43 PAGE 8   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1246    ----
   CONSTANT SIZE    =   2678    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
